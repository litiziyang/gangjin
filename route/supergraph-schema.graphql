
schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

scalar Data

type Mutation {
  """删除自己的论题"""
  delete(postId: ID!): String! @join__field(graph: POST)

  """登录"""
  login(code: String, password: String, phone: String!): loginResponse! @join__field(graph: USER)

  """查看post"""
  post(id: ID!): Post! @join__field(graph: POST)

  """查看自己的论题"""
  seeMyPost: [Post] @join__field(graph: POST)

  """发送验证码"""
  sendCode(phone: String): String! @join__field(graph: USER)

  """设置密码"""
  setPassword(
    """新密码"""
    newPassword: String!

    """旧密码"""
    oldPassword: String!
  ): String! @join__field(graph: USER)

  """写论题"""
  write(argument: String!, describe: String!, title: String!): String! @join__field(graph: POST)
}

type Post
  @join__owner(graph: POST)
  @join__type(graph: POST, key: "id")
{
  """论点"""
  argument: String! @join__field(graph: POST)

  """文章描述"""
  describe: String! @join__field(graph: POST)

  """是否过期"""
  enable: Boolean @join__field(graph: POST)

  """文章热度"""
  heat: Int @join__field(graph: POST)
  id: ID! @join__field(graph: POST)

  """标题"""
  title: String! @join__field(graph: POST)

  """用户"""
  userId: ID! @join__field(graph: POST)
}

type Query {
  user(phone: String!): User @join__field(graph: USER)
}

scalar Time

type User
  @join__owner(graph: USER)
  @join__type(graph: USER, key: "id")
  @join__type(graph: POST, key: "id")
{
  """头像"""
  avatar: String @join__field(graph: USER)
  id: ID! @join__field(graph: USER)

  """名称"""
  name: String! @join__field(graph: USER)

  """密码"""
  password: String @join__field(graph: USER)

  """电话号码"""
  phone: String! @join__field(graph: USER)
  post: Post @join__field(graph: POST)
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  POST @join__graph(name: "post" url: "http://post:4002/query")
  USER @join__graph(name: "user" url: "http://user:4001/query")
}

type loginResponse {
  User: User
  token: String!
}
